basePath: /api
definitions:
  handlers.AuthorResponse:
    properties:
      books:
        items:
          $ref: '#/definitions/handlers.BookSimple'
        type: array
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  handlers.AuthorResponseForBook:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  handlers.BookResponse:
    properties:
      author:
        $ref: '#/definitions/handlers.AuthorResponseForBook'
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  handlers.BookSimple:
    properties:
      id:
        type: integer
      title:
        type: string
    type: object
  handlers.CreateAuthorRequest:
    properties:
      email:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  handlers.UpdateAuthorRequest:
    properties:
      email:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  services.BookCreateRequest:
    properties:
      authorId:
        type: integer
      title:
        type: string
    required:
    - authorId
    - title
    type: object
info:
  contact: {}
  description: A simple RESTful Book Management API built with Golang
  title: Book Management API
  version: "1.0"
paths:
  /authors:
    get:
      consumes:
      - application/json
      description: Retrieve authors with pagination
      parameters:
      - default: 10
        description: Number of authors per page
        in: query
        name: limit
        type: integer
      - default: 0
        description: Starting offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get list of authors
      tags:
      - authors
    post:
      consumes:
      - application/json
      parameters:
      - description: Author data
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateAuthorRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.AuthorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new author
      tags:
      - authors
  /authors/{id}:
    delete:
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an author
      tags:
      - authors
    get:
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get author details by ID
      tags:
      - authors
    put:
      consumes:
      - application/json
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated author data
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateAuthorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an author
      tags:
      - authors
  /books:
    get:
      description: Retrieve a paginated list of books, each including its author
      parameters:
      - default: "10"
        description: Limit number of books per page
        in: query
        name: limit
        type: string
      - default: "0"
        description: Number of books to skip
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all books with pagination
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book with a title and an existing author
      parameters:
      - description: Book Create Request
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/services.BookCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.BookResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    get:
      description: Get a single book along with its author by book ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.BookResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get book details by ID
      tags:
      - books
swagger: "2.0"
